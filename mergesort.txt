func merge(l, mid, r) {
    i = l;
    j = mid + 1;
    ptr = l;

    while i <= mid && j <= r {
        if array.at(i) <= aux.at(j) {
            aux.set(ptr, array.at(i));
            i = i + 1;
        } else {
            aux.set(ptr, array.at(j));
            j = j + 1;
        }
        ptr = ptr + 1;
    }

    while i <= mid {
        aux.set(ptr, array.at(i));
        i = i + 1;
        ptr = ptr + 1;
    }

    while j <= mid {
        aux.set(ptr, array.at(j));
        j = j + 1;
        ptr = ptr + 1;
    }
}

func mergesort(l, r) {
    if (l < r) {
        mid = (l + r) / 2;

        mergesort(l, mid);
        mergesort(mid + 1, r);
        merge(l, mid, r);
    }
}

func sort() {
    mergesort(0, length - 1);
}